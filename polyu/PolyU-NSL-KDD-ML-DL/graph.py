import matplotlib.pyplot as plt
import numpy as np
import os

# 数据（从您的输出提取）
def_reward_chain = [18, 30, 39, 55, 88, 87, 83, 90, 87, 91, 89, 91, 87, 91, 93, 88, 92, 87, 89, 82, 89, 92, 90, 91, 88, 94, 89, 86, 93, 92, 92, 94, 88, 93, 97, 93, 93, 91, 89, 90, 96, 88, 96, 94, 94, 91, 94, 97, 93, 95, 91, 95, 93, 94, 94, 92, 97, 91, 96, 94, 92, 95, 96, 91, 91, 91, 95, 91, 97, 90, 96, 95, 93, 93, 94, 91, 94, 93, 93, 93, 96, 92, 92, 93, 97, 92, 95, 91, 90, 96, 95, 92, 95, 89, 96, 95, 92, 92, 94, 93]
att_reward_chain = [82, 70, 61, 45, 12, 13, 17, 10, 13, 9, 11, 9, 13, 9, 7, 12, 8, 13, 11, 18, 11, 8, 10, 9, 12, 6, 11, 14, 7, 8, 8, 6, 12, 7, 3, 7, 7, 9, 11, 10, 4, 12, 4, 6, 6, 9, 6, 3, 7, 5, 9, 5, 7, 6, 6, 8, 3, 9, 4, 6, 8, 5, 4, 9, 9, 9, 5, 9, 3, 10, 4, 5, 7, 6, 9, 7, 6, 7, 7, 7, 4, 8, 8, 7, 3, 8, 5, 9, 10, 4, 5, 8, 11, 4, 5, 8, 8, 6, 7]
def_loss_chain = [0.0000, 1.7839, 0.9859, 0.5774, 0.3677, 0.2065, 0.2300, 0.2057, 0.1904, 0.1798, 0.1343, 0.1791, 0.1758, 0.1506, 0.1422, 0.1229, 0.0851, 0.1048, 0.1008, 0.1160, 0.1333, 0.1001, 0.0777, 0.0879, 0.0909, 0.0972, 0.0930, 0.0839, 0.0913, 0.0993, 0.0758, 0.0741, 0.0838, 0.1099, 0.0946, 0.0994, 0.1097, 0.1232, 0.1260, 0.1307, 0.1315, 0.1254, 0.1253, 0.0888, 0.0912, 0.1046, 0.0922, 0.0713, 0.0715, 0.0647, 0.0619, 0.0701, 0.0831, 0.0802, 0.0832, 0.0757, 0.0815, 0.0750, 0.0991, 0.0910, 0.0809, 0.0564, 0.0560, 0.0627, 0.0604, 0.0545, 0.0390, 0.0373, 0.0249, 0.0371, 0.0567, 0.0470, 0.0635, 0.0478, 0.0669, 0.0747, 0.0668, 0.0773, 0.0742, 0.0717, 0.0922, 0.0912, 0.0970, 0.1320, 0.1083, 0.0969, 0.0904, 0.1010, 0.1111, 0.1022, 0.0766, 0.0787, 0.0806, 0.0700, 0.0634, 0.0723, 0.0671, 0.0538, 0.0535, 0.0537]
att_loss_chain = [0.0000, 1.1025, 0.3316, 0.3301, 0.3648, 0.4015, 0.3994, 0.3788, 0.3633, 0.3442, 0.2989, 0.2258, 0.1444, 0.0890, 0.0544, 0.0437, 0.0437, 0.0410, 0.0402, 0.0315, 0.0383, 0.0317, 0.0318, 0.0293, 0.0359, 0.0303, 0.0277, 0.0280, 0.0252, 0.0239, 0.0257, 0.0291, 0.0337, 0.0298, 0.0288, 0.0257, 0.0307, 0.0222, 0.0245, 0.0330, 0.0322, 0.0367, 0.0352, 0.0413, 0.0382, 0.0375, 0.0457, 0.0472, 0.0469, 0.0413, 0.0334, 0.0397, 0.0387, 0.0353, 0.0370, 0.0286, 0.0249, 0.0211, 0.0214, 0.0191, 0.0215, 0.0215, 0.0223, 0.0184, 0.0168, 0.0195, 0.0267, 0.0299, 0.0326, 0.0368, 0.0340, 0.0295, 0.0317, 0.0369, 0.0384, 0.0382, 0.0390, 0.0356, 0.0295, 0.0265, 0.0314, 0.0348, 0.0369, 0.0330, 0.0330, 0.0271, 0.0236, 0.0245, 0.0283, 0.0262, 0.0241, 0.0237, 0.0244, 0.0186, 0.0218, 0.0171, 0.0252, 0.0282, 0.0202, 0.0264]

plt.figure(1, figsize=(10, 8)) 

plt.subplot(211)
plt.plot(np.arange(len(def_reward_chain)), def_reward_chain, label='Defense')
plt.plot(np.arange(len(att_reward_chain)), att_reward_chain, label='Attack')
plt.title('Total reward by episode')
plt.xlabel('n Episode')
plt.ylabel('Total reward')
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3, ncol=2, mode="expand", borderaxespad=0.)

plt.subplot(212)
plt.plot(np.arange(len(def_loss_chain)), def_loss_chain, label='Defense')
plt.plot(np.arange(len(att_loss_chain)), att_loss_chain, label='Attack')
plt.title('Loss by episode')
plt.xlabel('n Episode')
plt.ylabel('Loss')
plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3, ncol=2, mode="expand", borderaxespad=0.)

plt.tight_layout()  


if not os.path.exists("results"):
    os.makedirs("results")


plt.savefig('results/train_adv.eps', format='eps', dpi=1000)
plt.savefig('results/train_adv.png', format='png', dpi=300)


plt.show()
